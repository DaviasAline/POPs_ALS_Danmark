---
title: "Aline's work"
format: html
editor: visual
toc: true
toc_depth: 4
theme:
  light: flatly
  dark: darkly
toc-location: left
---

```{r}
#| message: false
#| warning: false
#| include: false
source("~/Documents/POP_ALS_2025_02_03/1_codes/2_analyses_fattyacids_ALS.R")
```


# Danish data description

## Metadata

Not imputed for missing data

```{r}
#| echo: false
#| message: false
#| warning: false
descriptive$danish$covar_danish |>
  as_gt() |>
  gt::tab_options(table.font.size = "small")
```

## POPs 

### Distribution tables

```{r}
#| echo: false
#| message: false
#| warning: false
descriptive$danish$POPs_table_danish |> kable("html")
```



### Comparison of distribution cases/controls

```{r}
#| echo: false
#| message: false
#| warning: false
descriptive$danish$POPs_table_danish_by_als |>
  as_gt() |>
  gt::tab_options(table.font.size = "small")
```

### Heatmap of correlation 
```{r fig.height=10, fig.width=10}
#| echo: false
#| message: false
#| warning: false
corrplot(descriptive$danish$POPs_heatmap_danish, 
         method = 'color', 
         type = "lower", 
         tl.col = 'black', 
         tl.srt = 45, 
         addCoef.col = "black",
         number.cex = 0.8,
         number.digits = 1,
         tl.cex = 1,
         col = rev(COL2(diverging = "RdYlBu")))
```


### Boxplots

```{r, fig.width=10, fig.height=10}
#| echo: false
#| message: false
#| warning: false
# descrip_expo_danish
descriptive$danish$POPs_boxplot_danish_by_als
```

### Detailed distribution 
#### Summed 

```{r}
#| echo: false
#| message: false
#| warning: false
densityplot(data = bdd_danish, vars = POPs_group)
boxplot(data = bdd_danish, vars = POPs_group)
heatmap_cor(cormat = bdd_danish[POPs_group], decimal = 1)
```

#### PCBs

```{r}
#| echo: false
#| message: false
#| warning: false
PCBs <- bdd_danish |> select(all_of(POPs)) |> select(contains("PCB")) |> colnames()
densityplot(data = bdd_danish, vars = PCBs[1:9])
```

```{r, fig.height=3.33}
#| echo: false
#| message: false
#| warning: false
densityplot(data = bdd_danish, vars = PCBs[10:13])
```

```{r}
#| echo: false
#| message: false
#| warning: false
boxplot(data = bdd_danish, vars = PCBs[1:10])
```

```{r, fig.height=2}
#| echo: false
#| message: false
#| warning: false
boxplot(data = bdd_danish, vars = PCBs[11:13])
```

```{r}
#| echo: false
#| message: false
#| warning: false
heatmap_cor(cormat = bdd_danish[PCBs], decimal = 1)
rm(PCBs)
```

#### OCPs

```{r}
#| echo: false
#| message: false
#| warning: false
OCPs <- bdd_danish |> select(all_of(POPs)) |> select(contains("OCP")) |> colnames()
densityplot(data = bdd_danish, vars = OCPs)
boxplot(data = bdd_danish, vars = OCPs)
heatmap_cor(cormat = bdd_danish[OCPs], decimal = 1)
```

#### PBDEs

```{r,  fig.width=7, fig.height=3}
#| echo: false
#| message: false
#| warning: false
PBDEs <- bdd_danish |> select(all_of(POPs)) |> select(contains("PBDE")) |> colnames()
densityplot(data = bdd_danish, vars = PBDEs)
boxplot(data = bdd_danish, vars = PBDEs)
```

```{r,  fig.width=7, fig.height=4}
#| echo: false
#| message: false
#| warning: false
heatmap_cor(cormat = bdd_danish[PBDEs], decimal = 1)
```

## Fatty acids 
### Distribution tables 
```{r, fig.height=10, fig.width=10}
#| echo: false
#| message: false
#| warning: false
descriptive$danish$fattyacids_table_danish |> kable("html")
```

### Comparison of distribution cases/controls

```{r}
#| echo: false
#| message: false
#| warning: false
descriptive$danish$fattyacids_table_danish_by_als |>
  as_gt() |>
  gt::tab_options(table.font.size = "small")
```

### Heatmap of correlation
```{r, fig.height=12, fig.width=12}
#| echo: false
#| message: false
#| warning: false
corrplot(descriptive$danish$fattyacids_heatmap_danish, 
         method = 'color', 
         type = "lower", 
         tl.col = 'black', 
         tl.srt = 45, 
         addCoef.col = "black",
         number.cex = 0.8,
         number.digits = 1,
         tl.cex = 1,
         col = rev(COL2(diverging = "RdYlBu")))
```

### Boxplots
```{r, fig.height=10, fig.width=10}
#| echo: false
#| message: false
#| warning: false
# descriptive$danish$fattyacids_boxplot_danish
descriptive$danish$fattyacids_boxplot_danish_by_als
```

### Detailed distribution
#### Density plots 
```{r, fig.height=10, fig.width=10}
#| echo: false
#| message: false
#| warning: false
bdd_danish |> 
  select(sample, all_of(fattyacids)) |>
  pivot_longer(cols = -sample, names_to = "fattyacids", values_to = "values") |>
  mutate(fattyacids = fct_recode(fattyacids, !!!fattyacids_labels)) |>
  ggplot() +
  aes(x = values) +
  geom_density(fill = "#112446") +
  theme_minimal() +
  facet_wrap(~fattyacids, scales = "free", ncol = 4)
```
## Heatmap POPs/Fatty acids 
```{r, fig.width=12, fig.height=12}
#| echo: false
#| message: false
#| warning: false
descriptive$danish$POPs_fattyacids_heatmap_danish
```

## Multiple cholesterol variables
```{r}
#| echo: false
#| message: false
#| warning: false
boxplot(data = bdd_danish, vars = c("fS_Kol", "cholesterol"))
descrip_num(data = bdd_danish, vars = c("fS_Kol", "cholesterol")) |> kable("html")
cor.test(bdd_danish$fS_Kol, bdd_danish$cholesterol)
```


# Finnish data description 
## Metadata 
```{r}
#| echo: false
#| message: false
#| warning: false
descriptive$finnish$covar_finnish |>
  as_gt() |>
  gt::tab_options(table.font.size = "small")
```

## POPs
### Distribution tables
```{r}
#| echo: false
#| message: false
#| warning: false
descriptive$finnish$POPs_table_finish |> kable("html")
```


### Comparison of distribution cases/controls

```{r}
#| echo: false
#| message: false
#| warning: false
descriptive$finnish$POPs_table_finnish_by_als |>
  as_gt() |>
  gt::tab_options(table.font.size = "small")
```

### Heatmap of correlation 
```{r fig.height=10, fig.width=10}
#| echo: false
#| message: false
#| warning: false
corrplot(descriptive$finnish$POPs_heatmap_finnish, 
         method = 'color', 
         type = "lower", 
         tl.col = 'black', 
         tl.srt = 45, 
         addCoef.col = "black",
         number.cex = 0.8,
         number.digits = 1,
         tl.cex = 1,
         col = rev(COL2(diverging = "RdYlBu")))
```

### Boxplots

```{r, fig.width=10, fig.height=10}
#| echo: false
#| message: false
#| warning: false
# descriptive$finnish$POPs_boxplot_finnish
descriptive$finnish$POPs_boxplot_finnish_by_als
```

### Detailed distribution
#### Summed 

```{r}
#| echo: false
#| message: false
#| warning: false
densityplot(data = bdd_finnish, vars = POPs_group)
boxplot(data = bdd_finnish, vars = POPs_group)
heatmap_cor(cormat = bdd_finnish[POPs_group], decimal = 1)
```

#### PCBs

```{r}
#| echo: false
#| message: false
#| warning: false
PCBs <- bdd_finnish |> select(all_of(POPs_finnish)) |> select(contains("PCB")) |> colnames()
densityplot(data = bdd_finnish, vars = PCBs[1:9])
```

```{r, fig.height=3.33}
#| echo: false
#| message: false
#| warning: false
densityplot(data = bdd_finnish, vars = PCBs[10:13])
```

```{r}
#| echo: false
#| message: false
#| warning: false
boxplot(data = bdd_finnish, vars = PCBs[1:10])
```

```{r, fig.height=2}
#| echo: false
#| message: false
#| warning: false
boxplot(data = bdd_finnish, vars = PCBs[11:13])
```

```{r}
#| echo: false
#| message: false
#| warning: false
heatmap_cor(cormat = bdd_finnish[PCBs], decimal = 1)
rm(PCBs)
```

#### OCPs

```{r}
#| echo: false
#| message: false
#| warning: false
OCPs <- bdd_finnish |> select(all_of(POPs_finnish)) |> select(contains("OCP")) |> colnames()
densityplot(data = bdd_finnish, vars = OCPs)
boxplot(data = bdd_finnish, vars = OCPs)
# heatmap_cor(cormat = bdd_finnish[OCPs], decimal = 1)
```

#### PBDEs

```{r,  fig.width=7, fig.height=3}
#| echo: false
#| message: false
#| warning: false
PBDEs <- bdd_finnish |> select(all_of(POPs_finnish)) |> select(contains("PBDE")) |> colnames()
densityplot(data = bdd_finnish, vars = PBDEs)
boxplot(data = bdd_finnish, vars = PBDEs)
```

```{r,  fig.width=7, fig.height=4}
#| echo: false
#| message: false
#| warning: false
heatmap_cor(cormat = bdd_finnish[PBDEs], decimal = 1)
```


## Fatty acids
### Distribution tables 
```{r, fig.height=10, fig.width=10}
#| echo: false
#| message: false
#| warning: false
descriptive$finnish$fattyacids_table_finnish |> kable("html")
```

### Comparison of distribution cases/controls
```{r}
#| echo: false
#| message: false
#| warning: false
descriptive$finnish$fattyacids_table_finnish_by_als |>
  as_gt() |>
  gt::tab_options(table.font.size = "small")
```

### Heatmap of correlation
```{r, fig.height=12, fig.width=12}
#| echo: false
#| message: false
#| warning: false
corrplot(descriptive$finnish$fattyacids_heatmap_finnish, 
         method = 'color', 
         type = "lower", 
         tl.col = 'black', 
         tl.srt = 45, 
         addCoef.col = "black",
         number.cex = 0.8,
         number.digits = 1,
         tl.cex = 1,
         col = rev(COL2(diverging = "RdYlBu")))
```

### Boxplots
```{r, fig.height=10, fig.width=10}
#| echo: false
#| message: false
#| warning: false
# descriptive$finnish$fattyacids_boxplot_finnish
descriptive$finnish$fattyacids_boxplot_finnish_by_als
```

### Detailed distribution 
```{r, fig.height=10, fig.width=10}
#| echo: false
#| message: false
#| warning: false
bdd_finnish |> 
  select(sample, all_of(fattyacids)) |>
  pivot_longer(cols = -sample, names_to = "fattyacids", values_to = "values") |>
    mutate(fattyacids = fct_recode(fattyacids, !!!fattyacids_labels)) |>
  ggplot() +
  aes(x = "", y = values) +
  geom_boxplot(shape = "circle", fill = "#112446") +
  coord_flip() +
  theme_bw() +
  theme(axis.title = element_blank()) +
  facet_wrap(~fattyacids, scales = "free", ncol = 3L, nrow = 14L)
```
## Heatmap POPs/Fatty acids 
```{r, fig.width=12, fig.height=12}
#| echo: false
#| message: false
#| warning: false
descriptive$finnish$POPs_fattyacids_heatmap_finnish
```

## Multiple cholesterol variables issue
Why do we have 3 cholesterol variables in the finnish data ?
```{r}
#| echo: false
#| message: false
#| warning: false
boxplot(data = bdd_finnish, vars = c("fS_Kol", "chol", "cholesterol"))
descrip_num(data = bdd_finnish, vars = c("fS_Kol", "chol", "cholesterol")) |> kable("html")
heatmap_cholesterol <- bdd_finnish |> select("fS_Kol", "chol", "cholesterol")
heatmap_cholesterol <- cor(heatmap_cholesterol, 
                    use = "pairwise.complete.obs", 
                    method = "pearson")

corrplot(heatmap_cholesterol, 
         method = 'color', 
         type = "lower", 
         tl.col = 'black', 
         tl.srt = 45, 
         addCoef.col = "black",
         number.cex = 0.8,
         number.digits = 1,
         tl.cex = 1,
         col = rev(COL2(diverging = "RdYlBu")))

```


# Comparison danish/finnish data
## Metadata
```{r}
#| echo: false
#| message: false
#| warning: false
descriptive$comp$covar_comp |>
  as_gt() |>
  gt::tab_options(table.font.size = "small")
```

## POPs 
```{r, fig.width=10, fig.height=10}
#| echo: false
#| message: false
#| warning: false
descriptive$comp$POPs_table_comp |>
  as_gt() |>
  gt::tab_options(table.font.size = "small")
descriptive$comp$POPs_boxplot_comp
```

## Fatty acids
```{r, fig.height=12, fig.width=12}
#| echo: false
#| message: false
#| warning: false
descriptive$comp$fattyacids_table_comp |>
  as_gt() |>
  gt::tab_options(table.font.size = "small")
descriptive$comp$fattyacids_boxplot_comp 
```

# POPs and ALS (in Danish cohort) 

## Effects of covariates on ALS diagnosis

```{r}
#| echo: false
#| message: false
#| warning: false
descriptive$danish$covar_danish |>
  as_gt() |>
  gt::tab_options(table.font.size = "small")
```

## Effects of POPs on ALS occurence

### Spline transformation

#### main analysis

```{r}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
results_spline |> 
  rename('OR' = 'OR_base', '95% CI' = '95%CI_base', 'p-value' = 'p.value_base',
         'OR ' = 'OR_adjusted', '95% CI ' = '95%CI_adjusted', 'p-value ' = 'p.value_adjusted',
         ' OR ' = 'OR_copollutant', ' 95% CI ' = '95%CI_copollutant', ' p-value ' = 'p.value_copollutant') |>
  kable("html", escape = FALSE, align = "c") |>
  add_header_above(c(" " = 1, " " = 1, "Base model" = 3, "Adjusted model" = 3, "Copollutant model" = 3)) |>
  column_spec(1:2, bold = TRUE, background = "#f0f0f0")  |>
  scroll_box(width = "100%", height = "800px", extra_css = "scrollable-table") |>
  kable_styling(fixed_thead = TRUE)
```

#### sensitivity analysis without outliers

```{r}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
results_spline_outliers |> 
  rename('OR' = 'OR_base', '95% CI' = '95%CI_base', 'p-value' = 'p.value_base',
         'OR ' = 'OR_adjusted', '95% CI ' = '95%CI_adjusted', 'p-value ' = 'p.value_adjusted'
         # ,
         # ' OR ' = 'OR_copollutant', ' 95% CI ' = '95%CI_copollutant', ' p-value ' = 'p.value_copollutant'
         ) |>
  kable("html", escape = FALSE, align = "c") |>
  add_header_above(c(" " = 1, " " = 1, "Base model" = 3, "Adjusted model" = 3
                     # , 
                     # "Copollutant model" = 3
                     )) |>
  column_spec(1:2, bold = TRUE, background = "#f0f0f0")  |>
  scroll_box(width = "100%", height = "800px", extra_css = "scrollable-table") |>
  kable_styling(fixed_thead = TRUE)
```

### Quartile transformation

#### main analysis

```{r}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
results_quart |> 
    rename('OR' = 'OR_base', '95% CI' = '95%CI_base', 'p-value' = 'p.value_base',
         'OR ' = 'OR_adjusted', '95% CI ' = '95%CI_adjusted', 'p-value ' = 'p.value_adjusted',
         ' OR ' = 'OR_copollutant', ' 95% CI ' = '95%CI_copollutant', ' p-value ' = 'p.value_copollutant') |>
  kable("html", escape = FALSE, align = "c") |>
  add_header_above(c(" " = 1, " " = 1, "Base model" = 3, "Adjusted model" = 3, "Copollutant model" = 3)) |>
  column_spec(1:2, bold = TRUE, background = "#f0f0f0")  |>
  scroll_box(width = "100%", height = "800px", extra_css = "scrollable-table") |>
  kable_styling(fixed_thead = TRUE)
```

### Quadratic transformation

#### main analysis

```{r}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
results_quadratic |>
    rename('OR' = 'OR_base', '95% CI' = '95%CI_base', 'p-value' = 'p.value_base',
         'OR ' = 'OR_adjusted', '95% CI ' = '95%CI_adjusted', 'p-value ' = 'p.value_adjusted', 
         ' OR ' = 'OR_copollutant', ' 95% CI ' = '95%CI_copollutant', ' p-value ' = 'p.value_copollutant'
         ) |>
  kable("html", escape = FALSE, align = "c") |>
  add_header_above(c(" " = 1, " " = 1, "Base model" = 3, "Adjusted model" = 3, "Copollutant model" = 3)) |>
  column_spec(1:2, bold = TRUE, background = "#f0f0f0")  |>
  scroll_box(width = "100%", height = "800px", extra_css = "scrollable-table")|>
  kable_styling(fixed_thead = TRUE)
```

#### sensitivity analysis without outliers

```{r}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
results_quadratic_outliers |>
    rename('OR' = 'OR_base', '95% CI' = '95%CI_base', 'p-value' = 'p.value_base',
         'OR ' = 'OR_adjusted', '95% CI ' = '95%CI_adjusted', 'p-value ' = 'p.value_adjusted'
         # ,
         # ' OR ' = 'OR_copollutant', ' 95% CI ' = '95%CI_copollutant', ' p-value ' = 'p.value_copollutant'
         ) |>
  kable("html", escape = FALSE, align = "c") |>
  add_header_above(c(" " = 1, " " = 1, "Base model" = 3, "Adjusted model" = 3
                     # , "Copollutant model" = 3
                     )) |>
  column_spec(1:2, bold = TRUE, background = "#f0f0f0")  |>
  scroll_box(width = "100%", height = "800px", extra_css = "scrollable-table")|>
  kable_styling(fixed_thead = TRUE)
```

### Cubic transformation

#### main analysis

```{r}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
results_cubic |>
    rename('OR' = 'OR_base', '95% CI' = '95%CI_base', 'p-value' = 'p.value_base',
         'OR ' = 'OR_adjusted', '95% CI ' = '95%CI_adjusted', 'p-value ' = 'p.value_adjusted',
         ' OR ' = 'OR_copollutant', ' 95% CI ' = '95%CI_copollutant', ' p-value ' = 'p.value_copollutant') |>
  kable("html", escape = FALSE, align = "c") |>
  add_header_above(c(" " = 1, " " = 1, "Base model" = 3, "Adjusted model" = 3, "Copollutant model" = 3)) |>
  column_spec(1:2, bold = TRUE, background = "#f0f0f0")  |>
  scroll_box(width = "100%", height = "800px", extra_css = "scrollable-table")|>
  kable_styling(fixed_thead = TRUE)
```

#### sensitivity analysis without outliers

```{r}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
results_cubic_outliers |>
    rename('OR' = 'OR_base', '95% CI' = '95%CI_base', 'p-value' = 'p.value_base',
         'OR ' = 'OR_adjusted', '95% CI ' = '95%CI_adjusted', 'p-value ' = 'p.value_adjusted'
         # ,
         # ' OR ' = 'OR_copollutant', ' 95% CI ' = '95%CI_copollutant', ' p-value ' = 'p.value_copollutant'
         ) |>
  kable("html", escape = FALSE, align = "c") |>
  add_header_above(c(" " = 1, " " = 1, "Base model" = 3, "Adjusted model" = 3
                     # , "Copollutant model" = 3
                     )) |>
  column_spec(1:2, bold = TRUE, background = "#f0f0f0")  |>
  scroll_box(width = "100%", height = "800px", extra_css = "scrollable-table")|>
  kable_styling(fixed_thead = TRUE)
```

## Vizualization

### model comparison splines, linear quadratic and cubic

#### dioxin like PCBs

```{r, fig.width=15, fig.height=3}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
grid.arrange(grobs = list(plot_adjusted_spline$PCB_DL, 
                       plot_adjusted_spline_outlier$PCB_DL, 
                       plot_adjusted_quadratic$PCB_DL, 
                       plot_adjusted_quadratic_outlier$PCB_DL, 
                       plot_adjusted_cubic$PCB_DL, 
                       plot_adjusted_cubic_outlier$PCB_DL), ncol = 6)
```

#### non dioxin like PCBs

```{r, fig.width=15, fig.height=3}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
grid.arrange(grobs = list(plot_adjusted_spline$PCB_NDL, 
                       plot_adjusted_spline_outlier$PCB_NDL, 
                       plot_adjusted_quadratic$PCB_NDL,
                       plot_adjusted_quadratic_outlier$PCB_NDL, 
                       plot_adjusted_cubic$PCB_NDL,
                       plot_adjusted_cubic_outlier$PCB_NDL), ncol = 6)
```

#### 4 most commun PCBs

```{r, fig.width=15, fig.height=3}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
grid.arrange(grobs = list(plot_adjusted_spline$PCB_4, 
                       plot_adjusted_spline_outlier$PCB_4,
                       plot_adjusted_quadratic$PCB_4, 
                       plot_adjusted_quadratic_outlier$PCB_4, 
                       plot_adjusted_cubic$PCB_4, 
                       plot_adjusted_cubic_outlier$PCB_4), ncol = 6)
```

#### OCP_HCB

```{r, fig.width=15, fig.height=3}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
grid.arrange(grobs = list(plot_adjusted_spline$OCP_HCB, 
                       plot_adjusted_spline_outlier$OCP_HCB,
                       plot_adjusted_quadratic$OCP_HCB, 
                       plot_adjusted_quadratic_outlier$OCP_HCB, 
                       plot_adjusted_cubic$OCP_HCB, 
                       plot_adjusted_cubic_outlier$OCP_HCB), ncol = 6)
```

#### ΣDDT

```{r, fig.width=15, fig.height=3}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
grid.arrange(grobs = list(plot_adjusted_spline$ΣDDT, 
                       plot_adjusted_spline_outlier$ΣDDT,
                       plot_adjusted_quadratic$ΣDDT, 
                       plot_adjusted_quadratic_outlier$ΣDDT, 
                       plot_adjusted_cubic$ΣDDT, 
                       plot_adjusted_cubic_outlier$ΣDDT), ncol = 6)
```

#### OCP_β_HCH

```{r, fig.width=15, fig.height=3}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
grid.arrange(grobs = list(plot_adjusted_spline$OCP_β_HCH, 
                       plot_adjusted_spline_outlier$OCP_β_HCH,
                       plot_adjusted_quadratic$OCP_β_HCH, 
                       plot_adjusted_quadratic_outlier$OCP_β_HCH, 
                       plot_adjusted_cubic$OCP_β_HCH, 
                       plot_adjusted_cubic_outlier$OCP_β_HCH), ncol = 6)
```

#### Σchlordane

```{r, fig.width=15, fig.height=3}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
grid.arrange(grobs = list(plot_adjusted_spline$Σchlordane, 
                       plot_adjusted_spline_outlier$Σchlordane,
                       plot_adjusted_quadratic$Σchlordane, 
                       plot_adjusted_quadratic_outlier$Σchlordane, 
                       plot_adjusted_cubic$Σchlordane, 
                       plot_adjusted_cubic_outlier$Σchlordane), ncol = 6)
```

#### ΣPBDE

```{r, fig.width=15, fig.height=3}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
grid.arrange(grobs = list(plot_adjusted_spline$ΣPBDE, 
                       plot_adjusted_spline_outlier$ΣPBDE,
                       plot_adjusted_quadratic$ΣPBDE, 
                       plot_adjusted_quadratic_outlier$ΣPBDE, 
                       plot_adjusted_cubic$ΣPBDE, 
                       plot_adjusted_cubic_outlier$ΣPBDE), ncol = 6)
```

### forest plot quartiles

```{r fig.height=9, fig.width=9}
#| echo: false
#| message: false
#| warning: false
plot_quart
```

```{r fig.height=9, fig.width=9}
#| echo: false
#| message: false
#| warning: false
plot_quart_bis
```

### gamm models

#### Base models

Relationship between POPs exposure at baseline time and ALS occurrence estimated using a generalized additive mixed model (GAMM) from the Danish Diet, Cancer and Health study cohort established between December 1993 and May 1997. The solid blue line represents the predicted ALS occurrence by POPs exposure given that all other covariates are at their respective means. The light blue represents the 95% confidence intervals. Analyses were adjusted for sex and age. The effective degrees of freedom (EDF) for the POPs smooth terms is a summary statistic of a GAMM that reflects the degree of nonlinearity (edf=1: linear, edf=2: quadratic, edf\>2: more complex than quadratic).

```{r, fig.height=6, fig.width=15}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
wrap_plots(wrap_plots(plot_adjusted_gamm[1:4], nrow = 1), 
           wrap_plots(plot_adjusted_gamm_outlier[1:4], nrow = 1), 
           nrow = 2)
wrap_plots(wrap_plots(plot_adjusted_gamm[5:8], nrow = 1), 
           wrap_plots(plot_adjusted_gamm_outlier[5:8], nrow = 1), 
           nrow = 2)
```

#### Adjusted models

Relationship between POPs exposure at baseline time and ALS occurrence estimated using a generalized additive mixed model (GAMM) from the Danish Diet, Cancer and Health study cohort established between December 1993 and May 1997. The solid blue line represents the predicted ALS occurrence by POPs exposure given that all other covariates are at their respective means. The light blue represents the 95% confidence intervals. Analyses were adjusted for sex, age, serum cholesterol, BMI, smoking status, marital status and education. The effective degrees of freedom (EDF) for the POPs smooth terms is a summary statistic of a GAMM that reflects the degree of nonlinearity (edf=1: linear, edf=2: quadratic, edf\>2: more complex than quadratic).

```{r, fig.height=6, fig.width=15}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
wrap_plots(wrap_plots(plot_adjusted_gamm[1:4], nrow = 1), 
           wrap_plots(plot_adjusted_gamm_outlier[1:4], nrow = 1), 
           nrow = 2)
wrap_plots(wrap_plots(plot_adjusted_gamm[5:8], nrow = 1), 
           wrap_plots(plot_adjusted_gamm_outlier[5:8], nrow = 1), 
           nrow = 2)
```

#### Copollutant model

Relationship between POPs exposure at baseline time and ALS occurrence estimated using a generalized additive mixed model (GAMM) from the Danish Diet, Cancer and Health study cohort established between December 1993 and May 1997. The solid blue line represents the predicted ALS occurrence by POPs exposure given that all other covariates and all other co-pollutants are at their respective means. The light blue represents the 95% confidence intervals. Analyses were adjusted for sex, age, serum cholesterol, BMI, smoking status, marital status, education and for the other co-pollutants. The effective degrees of freedom (EDF) for the POPs smooth terms is a summary statistic of a GAMM that reflects the degree of nonlinearity (edf=1: linear, edf=2: quadratic, edf\>2: more complex than quadratic).

```{r, fig.height=6, fig.width=15}
#| echo: false
#| message: false
#| warning: false
#| column: screen-inset-right
wrap_plots(wrap_plots(plot_copollutant_gamm[1:4], nrow = 1), 
           wrap_plots(plot_copollutant_gamm_outlier[1:4], nrow = 1), 
           nrow = 2)
wrap_plots(wrap_plots(plot_copollutant_gamm[5:7], nrow = 1), 
           wrap_plots(plot_copollutant_gamm_outlier[5:7], nrow = 1), 
           nrow = 2)
```


## Sensitivity analysis pollutants not summed
### GAMMs 
```{r, fig.height=6, fig.width=15}
#| column: screen-inset-right
#| echo: false
#| message: false
#| warning: false
wrap_plots(plot_adjusted_gamm_not_summed[1:8], ncol = 4)
wrap_plots(plot_adjusted_gamm_not_summed[9:16], ncol = 4)
wrap_plots(plot_adjusted_gamm_not_summed[17:22], ncol = 4)
```

### Quartiles 
```{r,  fig.height=15, fig.width=10}
#| echo: false
#| message: false
#| warning: false
plot_quart_sensi_not_summed
```

# Fatty acids and ALS 
## Danish cohort
### Effects of subject characterist on ALS occurence in the Danish cohort 
```{r}
#| echo: false
#| message: false
#| warning: false
table_2_danish
```

### Effects of fatty acids on ALS occurence in the Danish cohort 
```{r}
#| echo: false
#| message: false
#| warning: false
table_3_sd_danish |>
set_table_properties(width = 1, layout = "autofit")
```

```{r}
#| echo: false
#| message: false
#| warning: false
figure_2_sd_danish
```

## Finnish cohorts 
### Effects of fatty acids on ALS occurence in the Finnish cohorts
```{r}
#| echo: false
#| message: false
#| warning: false
table_3_sd_finnish |>
set_table_properties(width = 1, layout = "autofit")
```